services:
  postgres:
    image: postgres:16
    container_name: c3-postgres
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - c3-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  c3-server:
    build: .
    container_name: c3-server
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "3000:3000"
    volumes:
      # 持久化上传文件
      - ./uploads:/usr/src/app/uploads
      # 持久化日志文件
      - ./logs:/usr/src/app/logs
      # 持久化环境变量文件
      - ./.env:/usr/src/app/.env:ro
    env_file:
      - .env
    environment:
      - DOCKER_ENV=true
      - TZ=Asia/Shanghai
    restart: unless-stopped
    networks:
      - c3-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => { process.exit(1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:

networks:
  c3-network:
    driver: bridge